#
## Copyright 2018, Intel Corporation
##
## 'recipe' for Docker to build an image of Leap-based
## environment for building the DAOS project.
##

## FROM opensuse:leap

FROM opensuse/leap:15.0
MAINTAINER TBD

# Build arguments can be set via -build-arg
# set NOBUILD to disable git clone & build
ARG NOBUILD
# use same UID as host and default value of 1000 if not specified
ARG UID=1000

# Update distribution
# It's better to put the zypper update in the same "cache layer" as the
# zypper install command so that the database is updated if/when the
# installed packages list below is updated
RUN zypper -n update
RUN zypper --non-interactive  install -y \
			git                 \
			gcc                 \
            gcc-c++             \
			make                \
			cmake               \
            glibc-locale        \
			libtool             \
			autoconf            \
			boost-devel         \
			uuid-devel          \
            libuuid-devel       \
			libopenssl-devel    \
			libevent-devel      \
			libltdl7            \
			librdmacm-utils     \
			libcmocka0          \
			libcmocka-devel     \
            libfabric-devel     \
			libibverbs          \
			libcunit1           \
			libnuma-devel       \
			libaio-devel        \
			libiscsi-devel      \
			readline-devel      \
			curl                \
			doxygen             \
			pandoc              \
			flex                \
			patch               \
			nasm                \
			yasm                \
			graphviz            \
			sg3_utils           \
			mscgen              \
			ninja               \
			meson               \
			bash                \
			python-devel        \
			python-pylint       \
			python-PyYAML       \
			python-paramiko     \
            python-pip          \
			python3             \
			python3-pylint      \
			python3-PyYAML      \
			python3-paramiko    \
			valgrind            \
			rsync               \
            which               \
            vim                 \
            libfabric-devel     \
            python-setuptools   \
            python3-setuptools  \
            python-PyGithub

RUN pip install --upgrade pip
RUN pip install -U setuptools
RUN pip install -U wheel
Run pip install scons==3.0.1

# Add CaRT user
ENV USER cart
ENV PASSWD cart
RUN useradd -u $UID -ms /bin/bash $USER
RUN echo "$USER:$PASSWD" | chpasswd

# Switch to new user
USER $USER
WORKDIR /home/$USER

# Fetch CaRT code
RUN if [ "x$NOBUILD" = "x" ] ; then git clone https://github.com/daos-stack/cart.git; fi
WORKDIR /home/$USER/cart

# Build CaRT & dependencies
RUN if [ "x$NOBUILD" = "x" ] ; then git submodule init && git submodule update; fi
RUN if [ "x$NOBUILD" = "x" ] ; then scons --build-deps=yes USE_INSTALLED=all install; fi

# Set environment variables
ENV PATH=/home/cart/cart/install/bin:$PATH
ENV LD_LIBRARY_PATH=/home/cart/cart/install/lib:/home/cart/cart/install/lib/cart_srv:$LD_LIBRARY_PATH
ENV CPATH=/home/cart/cart/install/include:$CPATH
ENV CRT_PHY_ADDR_STR="ofi+sockets"
ENV OFI_INTERFACE=eth0
